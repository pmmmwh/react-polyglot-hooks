version: 2.1

anchors:
  - &node-version-enum
    - '10.23'
    - '12.19'
    - '14.15'
    - '15.2'

commands:
  restore_yarn_cache:
    steps:
      - restore_cache:
          name: Restore Dependency Cache
          keys:
            - dependencies-v1-{{ checksum "yarn.lock" }}
            - dependencies-v1-

executors:
  node:
    parameters:
      version:
        default: lts
        type: string
    docker:
      - image: cimg/node:<< parameters.version >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    working_directory: ~/repo

jobs:
  setup:
    executor: node
    steps:
      - checkout
      - restore_yarn_cache
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Dependency Cache
          key: dependencies-v1-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  build:
    executor: node
    steps:
      - checkout
      - restore_yarn_cache
      - run:
          name: Build Library
          command: yarn build

  quality:
    executor: node
    steps:
      - checkout
      - restore_yarn_cache
      - run:
          name: Setup Reporting Environment
          command: mkdir -p reports/eslint
      - run:
          name: Check Code Quality with ESLint
          command: yarn lint --format junit --output-file $CIRCLE_WORKING_DIRECTORY/reports/eslint/results.xml
      - run:
          name: Check Code Style with Prettier
          command: yarn format:check
      - store_test_results:
          path: reports

  test:
    parameters:
      node-version:
        default: lts
        type: string
    executor:
      name: node
      version: << parameters.node-version >>
    steps:
      - checkout
      - restore_yarn_cache
      - run:
          name: Run tests and generate coverage report
          command: yarn test --coverage && yarn codecov

workflows:
  version: 2
  pipeline:
    jobs:
      - setup:
          context: DOCKER_CREDENTIALS
      - build:
          context: DOCKER_CREDENTIALS
          requires:
            - setup
      - quality:
          context: DOCKER_CREDENTIALS
          requires:
            - setup
      - test:
          context: DOCKER_CREDENTIALS
          matrix:
            parameters:
              node-version: *node-version-enum
          name: test/node:<< matrix.node-version >>
          requires:
            - setup
